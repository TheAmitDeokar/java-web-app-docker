node{
     def mavenHome = tool name: "maven3.9.9"
     def buildNumber = BUILD_NUMBER

// To keep last 5 buil only, old one will be delete
        properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5', removeLastBuild: true))])
// Github will notify to jenkins once changes/commit is done in github and jenkins starts build automatically 
       properties([pipelineTriggers([githubPush()])])


    stage("Git CheckOut"){
         git branch: 'master', credentialsId: 'GithubCred', url: 'https://github.com/TheAmitDeokar/java-web-app-docker.git'
    }
    
   // Build stage
   	stage('Build app package'){
	sh "$mavenHome/bin/mvn clean package"
         }
      
     // Build Docker Image
    stage('Build Docker image'){
    
    sh "docker build -t 686255940829.dkr.ecr.ap-south-1.amazonaws.com/java-web-app-docker:${buildNumber} ."
    } 
   

// Docker Login and push image
    stage('Docker Login and push image'){
    
   sh "aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 686255940829.dkr.ecr.ap-south-1.amazonaws.com"       

   sh "docker push 686255940829.dkr.ecr.ap-south-1.amazonaws.com/java-web-app-docker:${buildNumber}"
    }

 
    // Deloy App as Docker swarm cluster in Docker Deployment server
     stage('Deploy App as Docker swarm Container cluster in Docker Deployment server'){
        sshagent(['ubuntudeploymentserver']) {
          
          sh "aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 686255940829.dkr.ecr.ap-south-1.amazonaws.com"       
          sh "ssh -o StrictHostKeyChecking=no ubuntu@172.31.43.211 docker service rm javawebapp || true"
          sh "ssh -o StrictHostKeyChecking=no ubuntu@172.31.43.211 docker service create --name javawebapp --repilcas 2 -p 8080:8080 686255940829.dkr.ecr.ap-south-1.amazonaws.com/java-web-app-docker:${buildNumber}"
        
    }
     }
   
}
